name: Push

on:
  push:
    branches:
      - main

env:
  GOVERSION: "1.17"

jobs:
  gen-diff:
    name: Codegen Diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - run: make generate man
      - run: git diff --exit-code

  lint:
    name: Lint
    needs: gen-diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      - uses: golangci/golangci-lint-action@v2
        with:
          skip-go-installation: true

  test:
    name: Test
    needs: lint
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        include:
          - os: ubuntu-latest
            update-coverage: true
            update-goreportcard: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - run: make test
      - name: Update Coverage
        if: matrix.update-coverage
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
      - name: Update Go Report Card
        if: matrix.update-goreportcard
        uses: creekorful/goreportcard-action@v1.0

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - uses: goreleaser/goreleaser-action@v2
        with:
          args: build --snapshot
      - uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: |
            dist/darwin_darwin_amd64/axiom
            dist/linux_linux_amd64/axiom
            dist/windows_windows_amd64/axiom.exe

  binary-integration:
    name: Binary integration
    needs: build
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        include:
          - os: macos-latest
            goos: darwin
          - os: ubuntu-latest
            goos: linux
          - os: windows-latest
            goos: windows
    runs-on: ${{ matrix.os }}
    env:
      AXIOM_TOKEN: ${{ secrets.TESTING_AZURE_1_STAGING_ACCESS_TOKEN }}
      AXIOM_URL: ${{ secrets.TESTING_AZURE_1_STAGING_DEPLOYMENT_URL }}
      DATASET_SUFFIX: ${{ github.run_id }}-${{ matrix.goos }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: binaries
          path: dist
      - name: Test (Unix)
        if: matrix.goos == 'darwin' || matrix.goos == 'linux'
        run: |
          chmod +x dist/${{ matrix.goos }}_${{ matrix.goos }}_amd64/axiom
          echo "dist/${{ matrix.goos }}_${{ matrix.goos }}_amd64/axiom" >> $GITHUB_PATH
          axiom version -I
          axiom dataset create -n=cli-test-${{ env.DATASET_SUFFIX }} -d="CLI Integration test ${{ env.DATASET_SUFFIX }}"
          axiom ingest cli-test-${{ env.DATASET_SUFFIX }} -f=testdata/logs.json -f=testdata/logs.ndjson -f=testdata/logs.csv
          axiom dataset info cli-test-${{ env.DATASET_SUFFIX }}
          axiom dataset list
      - name: Test (Windows)
        if: matrix.goos == 'windows'
        run: |
          chmod +x dist/${{ matrix.goos }}_${{ matrix.goos }}_amd64/axiom
          echo "dist/${{ matrix.goos }}_${{ matrix.goos }}_amd64/axiom.exe" >> $GITHUB_PATH
          axiom version -I
          axiom dataset create -n=cli-test-${{ env.DATASET_SUFFIX }} -d="CLI Integration test ${{ env.DATASET_SUFFIX }}"
          axiom ingest cli-test-${{ env.DATASET_SUFFIX }} -f=testdata/logs.json
          axiom ingest cli-test-${{ env.DATASET_SUFFIX }} -f=testdata/logs.ndjson
          axiom ingest cli-test-${{ env.DATASET_SUFFIX }} -f=testdata/logs.csv
          axiom dataset info cli-test-${{ env.DATASET_SUFFIX }}
          axiom dataset list
      - name: Cleanup
        if: always()
        run: axiom dataset delete -f cli-test-${{ env.DATASET_SUFFIX }}
